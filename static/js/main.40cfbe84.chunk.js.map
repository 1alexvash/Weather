{"version":3,"sources":["components/WeatherIcon.js","components/WeatherDetails.js","App.js","index.js"],"names":["WeatherIcon","_ref","icon","dayOrNight","length","react_default","a","createElement","className","concat","id","WeatherDetails","temperature","city","time","react","App","_useState","useState","dataReady","undefined","Date","getHours","getMinutes","_useState2","Object","slicedToArray","state","setState","getCity","asyncToGenerator","regenerator_default","mark","_callee","location","wrap","_context","prev","next","axios","get","sent","fetchWeatherData","data","t0","alert","stop","apply","this","arguments","_ref2","_callee2","weather","_context2","status","objectSpread","Math","round","main","temp","_x","useEffect","components_WeatherIcon","components_WeatherDetails","ReactDOM","render","src_App","document","getElementById"],"mappings":"qPAYeA,EAVK,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACfC,EAAaD,EAAKA,KAAKA,EAAKA,KAAKE,OAAS,GAEhD,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,WAAAC,OAAaP,EAAKQ,GAAlB,KAAAD,OAAwBN,OCG3BQ,EARQ,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,YAAaC,EAAhBZ,EAAgBY,KAAMC,EAAtBb,EAAsBa,KAAtB,OACrBT,EAAAC,EAAAC,cAACQ,EAAA,SAAD,KACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQI,EAAvB,UACAP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQK,GACvBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQM,KCoEZE,SAlEH,WAAM,IAAAC,EACUC,mBAAS,CACjCC,WAAW,EACXjB,UAAMkB,EACNR,iBAAaQ,EACbP,UAAMO,EACNN,MAAM,IAAIO,MAAOC,WAAa,KAAM,IAAID,MAAOE,eANjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACTU,EADSH,EAAA,GACFI,EADEJ,EAAA,GASVK,EAAO,eAAA5B,EAAAwB,OAAAK,EAAA,EAAAL,CAAAM,EAAAzB,EAAA0B,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAzB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWC,IAAMC,IAC3B,qFAHU,OAENN,EAFME,EAAAK,KAKZC,EAAiBR,EAASS,KAAK9B,MALnBuB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAOZS,MAAKT,EAAAQ,IAPO,yBAAAR,EAAAU,SAAAb,EAAA,iBAAH,yBAAAhC,EAAA8C,MAAAC,KAAAC,YAAA,GAWPP,EAAgB,eAAAQ,EAAAzB,OAAAK,EAAA,EAAAL,CAAAM,EAAAzB,EAAA0B,KAAG,SAAAmB,EAAMtC,GAAN,IAAAuC,EAAA,OAAArB,EAAAzB,EAAA6B,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAICC,IAAMC,IAAN,qDAAA/B,OACiCI,EADjC,WAAAJ,OAHV,mCAGU,kBAJD,OAOE,OAHjB2C,EAJeC,EAAAZ,MAOTa,QACV1B,EAASH,OAAA8B,EAAA,EAAA9B,CAAA,GACJE,EADG,CAENR,WAAW,EACXjB,KAAMkD,EAAQT,KAAKS,QAAQ,GAC3BvC,OACAD,YAAa4C,KAAKC,MAAML,EAAQT,KAAKe,KAAKC,SAbzBN,EAAAf,KAAA,gBAAAe,EAAAhB,KAAA,EAAAgB,EAAAT,GAAAS,EAAA,SAiBrBR,MAAKQ,EAAAT,IAjBgB,yBAAAS,EAAAP,SAAAK,EAAA,iBAAH,gBAAAS,GAAA,OAAAV,EAAAH,MAAAC,KAAAC,YAAA,GA0BtB,OALAY,oBAAU,WACRhC,KAEC,IAGDxB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAC,QAAc,IAAIY,MAAOC,aACrCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZmB,EAAMR,UACLd,EAAAC,EAAAC,cAACQ,EAAA,SAAD,KACEV,EAAAC,EAAAC,cAACuD,EAAD,CAAa5D,KAAMyB,EAAMzB,KAAMY,KAAMa,EAAMb,OAC3CT,EAAAC,EAAAC,cAACwD,EAAD,CACEnD,YAAae,EAAMf,YACnBC,KAAMc,EAAMd,KACZC,KAAMa,EAAMb,QAIhB,iBC/DVkD,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.40cfbe84.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WeatherIcon = ({ icon }) => {\r\n  const dayOrNight = icon.icon[icon.icon.length - 1];\r\n\r\n  return (\r\n    <div className=\"icon\">\r\n      <i className={`owf owf-${icon.id}-${dayOrNight}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst WeatherDetails = ({ temperature, city, time }) => (\r\n  <Fragment>\r\n    <div className=\"temp\">{temperature} Â°C</div>\r\n    <div className=\"city\">{city}</div>\r\n    <div className=\"time\">{time}</div>\r\n  </Fragment>\r\n);\r\n\r\nexport default WeatherDetails;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\n\nimport WeatherIcon from \"./components/WeatherIcon\";\nimport WeatherDetails from \"./components/WeatherDetails\";\n\nimport \"./scss/main.css\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    dataReady: false,\n    icon: undefined,\n    temperature: undefined,\n    city: undefined,\n    time: new Date().getHours() + \":\" + new Date().getMinutes()\n  });\n\n  const getCity = async () => {\n    try {\n      const location = await axios.get(\n        \"http://api.ipstack.com/46.173.121.249?access_key=80d851c0cffdc633c1a7210ef2f454e7\"\n      );\n      fetchWeatherData(location.data.city);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const fetchWeatherData = async city => {\n    const appId = \"4a7bba8e35b7bfadb8a039bd6b248e38\";\n\n    try {\n      const weather = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${appId}&units=metric`\n      );\n      if (weather.status === 200) {\n        setState({\n          ...state,\n          dataReady: true,\n          icon: weather.data.weather[0],\n          city,\n          temperature: Math.round(weather.data.main.temp)\n        });\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  useEffect(() => {\n    getCity();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className={`App time-${new Date().getHours()}`}>\n      <div className=\"content\">\n        {state.dataReady ? (\n          <Fragment>\n            <WeatherIcon icon={state.icon} time={state.time} />\n            <WeatherDetails\n              temperature={state.temperature}\n              city={state.city}\n              time={state.time}\n            />\n          </Fragment>\n        ) : (\n          \"Loading...\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}