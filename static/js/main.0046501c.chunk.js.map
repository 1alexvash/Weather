{"version":3,"sources":["components/WeatherIcon.js","components/WeatherDetails.js","App.js","index.js"],"names":["WeatherIcon","_ref","icon","dayOrNight","length","react_default","a","createElement","className","concat","id","WeatherDetails","temperature","city","time","react","App","_useState","useState","dataReady","undefined","Date","getHours","getMinutes","_useState2","Object","slicedToArray","state","setState","getCity","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","navigator","geolocation","getCurrentPosition","_ref2","_callee","position","lat","lon","location","_context","coords","latitude","longitude","axios","get","sent","fetchWeatherData","data","results","components","town","stop","_x","apply","this","arguments","_ref3","_callee3","weather","_context3","status","objectSpread","Math","round","main","temp","t0","alert","_x2","useEffect","components_WeatherIcon","components_WeatherDetails","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0046501c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WeatherIcon = ({ icon }) => {\r\n  const dayOrNight = icon.icon[icon.icon.length - 1];\r\n\r\n  return (\r\n    <div className=\"icon\">\r\n      <i className={`owf owf-${icon.id}-${dayOrNight}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst WeatherDetails = ({ temperature, city, time }) => (\r\n  <Fragment>\r\n    <div className=\"temp\">{temperature} Â°C</div>\r\n    <div className=\"city\">{city}</div>\r\n    <div className=\"time\">{time}</div>\r\n  </Fragment>\r\n);\r\n\r\nexport default WeatherDetails;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\n\nimport WeatherIcon from \"./components/WeatherIcon\";\nimport WeatherDetails from \"./components/WeatherDetails\";\n\nimport \"./scss/main.css\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    dataReady: false,\n    icon: undefined,\n    temperature: undefined,\n    city: undefined,\n    time: new Date().getHours() + \":\" + new Date().getMinutes()\n  });\n\n  const getCity = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n\n        const location = await axios.get(\n          `https://api.opencagedata.com/geocode/v1/json?q=${lat}%2C+${lon}&key=83cdb08ee1ff42b388fca37dd29a98a9&pretty=1`\n        );\n\n        fetchWeatherData(location.data.results[0].components.town);\n      });\n    }\n  };\n\n  const fetchWeatherData = async city => {\n    const appId = \"4a7bba8e35b7bfadb8a039bd6b248e38\";\n\n    try {\n      const weather = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${appId}&units=metric`\n      );\n      if (weather.status === 200) {\n        setState({\n          ...state,\n          dataReady: true,\n          icon: weather.data.weather[0],\n          city,\n          temperature: Math.round(weather.data.main.temp)\n        });\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  useEffect(() => {\n    getCity();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className={`App time-${new Date().getHours()}`}>\n      <div className=\"content\">\n        {state.dataReady ? (\n          <Fragment>\n            <WeatherIcon icon={state.icon} time={state.time} />\n            <WeatherDetails\n              temperature={state.temperature}\n              city={state.city}\n              time={state.time}\n            />\n          </Fragment>\n        ) : (\n          \"Loading...\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}